{"version":3,"sources":["services/names.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","then","response","data","id","put","Notification","notification","message","className","style","Filter","props","value","show","onChange","handleShowChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Person","name","includes","number","onClick","deletePerson","App","useState","persons","setPersons","setNewName","setNewNumber","setShow","setMessage","useEffect","nameServices","catch","error","console","log","persona","find","person","window","confirm","delete","filter","setTimeout","p","event","target","preventDefault","map","changedPerson","returnedPerson","returnedObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce95b89e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update}","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport nameServices from './services/names'\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n  return <div className={notification.style}>{notification.message}</div>\n}\n\nconst Filter = (props) => {\n  return(\n      <div>\n      filter shown with\n      <input \n        value = {props.show}\n        onChange = {props.handleShowChange}\n      />\n      </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return(\n    <form onSubmit = {props.addName}>\n    <div>\n      name: \n      <input \n        value = {props.newName} \n        onChange = {props.handleNameChange}\n      />\n    </div>\n    <div>\n      number: \n      <input \n        value = {props.newNumber}\n        onChange = {props.handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Person = (props) => {\n  if(props.name.includes(props.show))\n    return(\n      <div>\n        <p>\n          {props.name} {' '} \n          {props.number} \n          <button onClick = {() => props.deletePerson(props.id)}>delete</button>\n          </p>\n      </div>\n    )\n  else\n    return(\n      <p> </p>\n    )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ show, setShow] = useState('')\n  const [ notification, setMessage] = useState({\n    message: null,\n    style: null\n  })\n\n  useEffect(() => {\n    nameServices\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n    .catch(error => {\n      console.log(error)\n    })  \n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const arrayNames = persons.map(person => person.name)\n    if (arrayNames.includes(newName)){\n      window.confirm(`${newName} is already added to phonebook, replace the old number?`)\n      const persona = persons.find(p => p.name === newName)\n      const changedPerson = {...persona, number: newNumber}\n      console.log(changedPerson)\n      nameServices\n      .update(persona.id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== persona.id ? person : returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage({\n          message: `Updated ${newName}`,\n          style: 'success'\n        })\n        setTimeout(() => {\n          setMessage({message: null, style: null})\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage({\n          message: `Information of ${newName} already deleted from the server`,\n          style: 'error'\n        })\n        setTimeout(() => {\n          setMessage({message: null, style: null})\n        }, 5000)\n        setPersons(persons.filter(p => p.id !== persona.id))\n      })  \n    }\n    else {\n      const nameObject = {name: newName, number: newNumber}\n      nameServices\n      .create(nameObject)\n      .then(returnedObject => {\n        setPersons(persons.concat(returnedObject))\n        setNewName('')\n        setNewNumber('')\n        setMessage({\n          message: `Added ${newName}`,\n          style: 'success'\n        })\n        setTimeout(() => {\n          setMessage({message: null, style: null})\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setMessage({\n          message: `Information of ${newName} already deleted from the server`,\n          style: 'error'\n        })\n        setTimeout(() => {\n          setMessage({message: null, style: null})\n        }, 5000)\n      })  \n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleShowChange = (event) => {\n    setShow(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const persona = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${persona.name}?`))\n    {\n        axios\n        .delete(`/api/persons/${id}`)\n        .then(response => {\n          return setPersons (persons.filter(person => person.id !== id))\n        })\n        .catch(error => {\n          setMessage({\n            message: `Information about ${persona.name} already deleted from the server`,\n            style: 'error'\n          })\n          setTimeout(() => {\n            setMessage({message: null, style: null})\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== persona.id))\n        })  \n      }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification = {notification} />\n\n      <Filter show = {show} handleShowChange = {handleShowChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        addName = {addName} \n        newName = {newName} \n        handleNameChange = {handleNameChange}\n        newNumber = {newNumber}\n        handleNumberChange = {handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n    \n        {persons.map(person =>\n          <Person \n            key = {person.name} \n            name = {person.name} \n            number = {person.number} \n            show = {show}\n            id = {person.id}\n            deletePerson = {deletePerson}\n            />\n        )} \n    </div>\n  )\n\n\n/* Exercise 2.9\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <div>\n        filter shown with\n        <input \n          value = {show}\n          onChange = {handleShowChange}\n        />\n      </div>\n        \n      <h2>Add a new</h2>\n\n      <form onSubmit = {addName}>\n        <div>\n          name: \n          <input \n            value = {newName} \n            onChange = {handleNameChange}\n          />\n        </div>\n        <div>\n          number: \n          <input \n            value = {newNumber}\n            onChange = {handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n      <h2>Numbers</h2>\n    \n        {persons.map(person =>\n          <Person key = {person.name} name = {person.name} number = {person.number} show = {show}/>\n        )} \n\n\n    </div>\n  )\n*/\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}